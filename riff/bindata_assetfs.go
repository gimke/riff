// Code generated by go-bindata.
// sources:
// static/images/favicon.ico
// static/images/logo.svg
// static/images/spinner.svg
// static/index.html
// DO NOT EDIT!

package riff

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticImagesFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x01\xa8\x55\x55\xd6\xf0\x99\xea\x57\x7f\x89\x74\xd6\x72\x42\x42\x7c\x12\xfe\x83\x48\x84\x48\x88\xf4\x8b\xef\x21\x22\x21\x12\x12\x22\x21\x12\x12\x11\x12\x83\x88\x84\x48\x0d\x3e\xff\x8a\x8a\x10\xc7\xbd\xeb\x0f\xf1\x0b\x27\x24\x42\x42\x24\x22\xfc\xc4\x2f\xc2\x1a\xb1\x90\xb0\x88\x21\xfa\xa4\xcf\xef\xe5\x88\xca\x5b\x6b\x9c\x37\x2a\x6f\xee\xc8\xe5\x9d\x8f\xb5\xf7\x3a\xf7\xee\xb3\xef\x39\xf7\x9c\xfb\xbc\x96\x0d\x2e\xde\xe6\x9c\x77\xcf\xd9\x7b\xaf\xbd\xf6\xda\x6b\xad\xbd\xf6\xda\xfb\x24\xc9\xaf\x92\xff\x95\xcc\x9c\x29\xd7\x79\xc9\xe6\x7b\x92\x64\x7d\x92\x24\xb3\x67\xfb\xff\x5f\xff\xdf\x49\xf2\xe9\x3d\x49\x32\x6f\x9e\xff\xff\xd0\xcc\x24\x59\x75\x5f\x92\x2c\x5a\xa4\xff\xff\x9f\x24\xb9\x32\x37\x49\x86\x86\xfc\xff\x0b\x56\x24\xc9\xdb\x2b\x93\x64\x41\x92\x24\x33\x93\x24\x99\x97\xf8\xdf\x7f\x2a\x60\x03\xd3\xd9\xc2\x66\xb2\x78\x94\x2c\xfc\xa0\xe9\x18\x5b\x78\x8e\x2c\xde\xdb\x35\xaf\x85\x65\x64\xf1\x1c\x59\x38\xc8\x16\x56\xb1\x85\x07\x24\x91\xc5\x55\xf2\x1b\x59\x18\x61\x03\xcb\x4b\xf2\x3e\x4a\x16\x2e\xb0\x81\xa1\xb2\xf2\xc9\xe2\x72\x7d\x67\x79\x8c\xb3\xd4\xcb\xd6\xe7\x45\xa4\xbb\x10\x69\x03\x00\xbd\x87\xe8\xd2\x46\x00\xbe\x4b\xdf\x5d\x4e\x16\x47\xc2\xb6\xb0\x85\x67\xc9\xc2\xfb\x41\xde\x0f\x10\xe9\x53\x00\x5e\x8f\x48\xeb\x01\xe8\x13\x00\x3a\x2c\xcf\x14\x8f\x83\x64\xf0\xb9\x00\xaf\x8f\xd9\xc0\x6a\xb9\x07\xe0\x27\x11\xe9\x04\x00\xdf\x93\x3d\x97\x7b\x44\x29\x83\x37\xb8\xf7\x8d\xd0\x03\x8f\xb5\xf3\xc3\xf7\x6c\x61\xae\x7f\x97\xde\xcd\xde\x0b\x41\x70\x91\xf6\x28\xbe\x0f\x48\xbf\x94\xe5\x97\xb6\xc7\xf9\x11\x49\xf0\x3a\xa8\xf5\xcf\x89\xf2\x7f\x44\x16\x57\xeb\x7b\x52\xcf\xe7\x05\xf8\x7f\x2a\x65\x28\x0d\x1f\x13\xfe\x08\xe8\xf7\x0c\x59\x38\xa4\xef\xde\x05\x40\xef\x6b\x19\x1b\x05\x17\x4f\x0f\x3a\x94\xf5\x01\x59\x78\x8f\x2c\x6e\x0e\xe8\x37\xdd\xf3\x19\xae\xcc\xfa\x40\x69\x7f\x40\xdb\xb3\xbe\xd5\x7f\x16\x86\xc8\xc2\x39\xc9\x13\xf1\xc0\x52\xe5\x8d\x95\x65\xfc\xa3\x79\x2f\x90\xc1\x47\x0b\x9f\xfb\x32\x04\x8f\x43\x64\x70\x0d\x5b\x98\xc7\x06\xe6\xb2\x85\xd5\xc2\x1f\x5a\x6f\x61\xde\x5c\x5b\x0c\x3e\x43\x16\x3f\x92\x7e\xf1\x49\xee\xf1\xd9\x18\xe7\x7e\x40\x9a\x26\x49\x73\x30\x49\xae\x7d\x9d\x24\x7f\xfb\x47\x92\x9c\x7b\x31\x49\xfe\xf3\xdf\x92\xe4\x3f\xfe\x2b\x49\xfe\xfd\xaf\x3e\xc9\xbd\xfc\x26\xcf\xe4\x1d\x79\x57\xf2\x48\x5e\x91\x33\xb3\x93\x24\x59\x54\x4f\xce\xdc\xd5\xc3\x7d\x78\xad\x73\x1f\x97\xd3\x51\x2f\x19\xbc\x97\x2d\x2c\x65\x0b\x6b\xd9\xc2\x13\x7a\xdf\x55\x26\x45\x65\x74\x24\x36\x20\x69\x35\x5b\x10\x79\x77\x83\x0c\xa4\x64\x31\x6d\x5f\xf1\x06\x5b\x38\x46\x16\x1f\x97\x77\xcb\xca\x29\xa2\x03\x5b\x98\x43\x06\x8f\xb3\x81\x94\x2d\xfc\x99\x2d\xbc\x20\xf2\x87\x2d\x3c\x28\x49\xe4\x19\x5b\xd8\x41\x16\xbf\x65\x8b\x29\x1b\xf8\x94\x0c\xce\xad\x43\x1f\xb6\xf0\x30\x19\xbc\xc8\x06\x46\xd9\xc2\x93\x64\xb1\x94\x86\x6c\x41\x70\x59\x4f\x16\x2f\xb3\x81\xcb\x6c\x61\x51\x37\xfa\x38\xbc\x2d\x5e\x64\xe1\x5d\x8f\x4f\xb7\x76\xb7\x12\x59\x27\x57\xfe\xec\xea\x30\x10\xe7\x73\x75\x90\x41\x49\xc7\x04\x6f\x32\x38\x2f\xc4\x19\x80\xa7\x21\xd2\x5a\x00\xde\x85\x48\x92\x9e\x90\xdf\xa2\xfc\x73\xd8\xc2\x65\x32\xf8\xa9\xb4\x2b\xa6\x8f\xc8\x26\x47\x4b\x0b\x1b\xc3\xb6\x21\xd2\x2a\x44\x3a\x8f\xc8\x29\x00\x5f\x45\xa4\xab\x72\x8f\x48\x17\x00\x78\x75\x44\xaf\xf5\x52\x06\x59\x5c\x13\xd3\x87\x2d\x7c\xa4\x74\x69\xb5\x0d\x91\x56\x22\xd2\x0d\x00\x3a\x89\x48\x4b\x54\x7e\xc9\xef\x8f\x00\xb0\xc8\xc1\x26\x22\xad\x0e\x79\x8e\x0c\x7e\x2b\x74\x08\xe9\x43\x46\xe4\x20\x36\xd8\xc2\xce\x80\x26\x53\x10\x69\x04\x91\x4e\xc5\xb4\xc8\x9e\x6b\x1d\x17\x10\x69\x5a\x50\xd6\x0e\xe1\x5d\x19\x33\xd9\x6f\x6c\x61\xb1\xf2\x59\x4b\x46\x22\xd2\x1a\xa5\xc3\xa3\x65\xfc\xe3\xdb\xe4\xe8\xb6\x36\xfb\x8d\x8c\xf0\xae\xa3\xf3\xd2\x16\xed\x2d\xac\x21\xcf\xeb\x0b\xb2\x76\x01\xf0\x0b\x00\x3c\xae\xf2\xbb\x30\x79\x9d\xc1\x57\xa5\xdf\x03\x3a\x3f\xa8\x65\xad\x0d\xf0\x5f\x4d\xbe\xce\xac\x7c\xc1\xcd\x95\x8f\x48\xf7\xc4\xbc\x90\x5d\xb5\x2f\xa4\xcf\x77\x06\xf4\xf1\xe5\x9b\x56\xf9\x77\x65\xf4\x51\x3d\x94\xf5\xed\x6a\xa5\xcf\xf2\x32\xfc\x11\x69\xa9\xbe\x13\x96\x35\xa4\xb4\x5e\x1a\xe0\x3f\x8d\x2c\x8e\xb3\x85\x5d\x19\x1d\x7d\xff\xd1\x39\x00\x3e\x0d\xc0\x1d\xfa\x41\xfa\x1c\x80\x4e\x79\xde\x75\xfd\x9b\xd1\xff\x05\x32\xd8\xd0\xfe\x4d\x82\x3e\xf8\x90\x2c\x9e\x65\x0b\xa1\xfe\x1e\x02\xe0\x86\xd6\xb1\x5c\xf4\xb9\xd2\x64\x99\xf2\xd5\x0d\x00\x5e\x19\x8c\x63\x29\xe7\xbb\x40\xc7\x87\x63\x7c\xa5\xf6\xfb\xa6\x88\x06\x52\xc7\x39\xe5\x93\x06\x22\x35\x94\x26\x23\x61\xd9\x8a\xe3\x06\xa5\xf3\xea\x48\x3e\x24\x64\x66\xc9\xf8\xf8\x98\x2c\x5e\x21\x8b\x0f\x46\x7c\x38\x45\xfb\x63\x87\xf6\xfb\x6a\xf9\x2d\x1a\xbb\xf3\xc8\xe0\x28\x1b\x38\xae\x63\x34\x84\xac\xef\x67\xb3\x81\xf3\x2c\xba\xde\xb8\x3a\x6a\xe9\x2f\x2d\x5b\xc6\xfe\x45\x91\x75\x05\xef\x84\x6d\x5c\xc8\xd6\xd5\x71\x45\x68\xc5\xc6\xf5\x47\xb1\x0e\xf2\xf2\x79\x23\x19\x64\x27\xd3\x2d\x3c\x54\xa2\x5f\x72\xc0\x06\x66\x3b\x5a\x89\xae\x32\x78\x96\x0c\xee\x12\xdb\x52\xc6\x07\x19\x5c\xc0\x16\x56\xb2\x81\x9d\xec\x6d\x10\xe1\x45\xd1\x63\x0f\x14\x95\x15\xb5\xb9\x4d\x2b\x3b\xcb\xf7\xb9\x81\x0f\xc9\xe0\x38\x07\xfa\x51\xfb\x70\x9c\x8c\xb3\x6f\x56\x05\x32\x31\x29\xd0\x5f\xd5\xfa\xc3\xe0\x34\x37\x06\x45\x1f\xfb\xb4\x58\x7e\xab\x99\xff\x96\x42\x9a\xa6\x3e\x25\x69\xd2\xdc\x39\x98\xfc\x33\xfd\x63\x72\x2d\xfd\x3a\xb9\x74\xe9\x52\xf2\xb7\xff\xf7\x8f\xe4\xeb\x65\xd7\x92\x73\x3b\x5f\x4c\xce\xa5\x92\xfe\xaf\x5e\x5f\x4c\xce\xec\x7c\xd1\x3d\x93\x77\x2e\xa5\x97\x5c\x1e\xc9\xdb\x5c\x3e\xe8\xca\xca\xca\x5d\xa0\x73\xbd\xa1\x9f\x78\xbe\xf7\xaf\x0c\x6c\xe1\x3e\x32\xf8\x04\x59\x7c\x43\xf8\x97\x2d\x7c\xae\x49\xee\x77\xb3\x85\x75\x6c\x61\x66\xdf\xeb\x35\xb0\x80\x0d\x1c\x60\x0b\xe3\xe4\xc7\x48\x79\x32\x4e\x1f\x1c\x24\x8b\x0b\xfb\x50\xef\x34\x32\xf8\x06\x8b\x1d\xeb\x65\xb4\x94\x7d\x44\xe6\xee\x6a\x77\x2e\xd4\xb4\x5c\xe6\xaf\x6c\xe1\xb0\xd4\xaf\x78\x34\xd9\xc2\x1e\x99\x4b\x4f\xb2\x6e\x99\xe7\x9f\x66\xa3\xf5\x1a\x78\x89\x0d\xcc\xaa\xcc\x67\x01\xc4\xde\x61\x0b\xd7\x5d\x5e\x03\x67\xd8\xc0\x9c\x1e\xeb\x9e\xcd\x16\xce\x6a\x3b\xbe\x62\x0b\xf3\x7b\xc5\x5f\x74\x0d\x59\xfc\x52\xe9\x76\x4e\x6c\xe0\x9a\x75\x4f\x0b\xf2\x1d\xef\x61\x3e\x52\x84\xc3\x74\xb6\x4e\xf7\x65\x74\xa8\xec\x0b\x32\xf8\xba\xca\xe3\x33\x65\x75\xeb\xfc\x7d\x09\x00\x6f\x90\xe4\xed\x95\xbc\xde\x0c\xda\x23\x38\x7c\xa9\xb4\xdc\xd3\xad\x6e\x36\x30\xdf\xf1\x9a\xe7\xe1\xdf\xc6\xcf\xc5\x5e\x41\xa4\x1d\x00\x7c\xd9\xdb\x02\x3e\x01\xb8\xeb\x28\x00\xff\x5e\x6d\xda\xb8\x5c\xe9\x8b\xeb\x6c\xa0\xd9\x6d\x5c\xb0\x81\xfd\x4a\xab\x57\x0b\xea\xbe\x1f\x91\x4e\x23\x52\xaa\xe9\x24\x00\xbf\x85\x48\x92\x32\x9b\x5c\x70\x39\x03\xc0\xb3\x3b\xca\xb6\xb0\x4b\xc7\xe8\xc1\xc2\xba\x2d\xdc\xeb\x78\xd6\x42\x83\x0d\xdc\x1f\xd5\x2d\x76\xca\x97\x59\xf9\x88\xf4\x70\x01\x7e\x0f\x89\x3d\xa6\xb8\x9d\x09\x6d\xbb\xc4\xf7\x2b\xb8\xb1\xe9\x75\xee\x7d\x71\x7e\x32\xb8\x46\xdb\xfe\x71\x41\xd9\xcf\x07\x6d\xeb\xc8\x9b\x01\x00\xdf\x9b\xe1\x20\x7d\x51\x50\xc7\x61\xe5\x83\x75\x05\xcf\x5e\xd1\xb1\xbe\x2d\x2a\xf3\x1e\x9d\x8b\x48\xbb\x16\x97\xd5\x1d\xd1\x41\xfa\x62\x34\xe6\x49\x27\xa3\x8c\xab\x7f\x77\x9c\x8f\x0d\x1c\xd2\xf6\xaf\x8a\xca\x5b\xa4\x75\x9f\xae\xaa\x3b\xc0\xf9\x73\xa5\xc1\x92\x5c\x1d\xd6\xf9\x0a\xa5\x8e\x0f\x3b\xea\xb7\x70\x5c\xc7\xfc\xe2\xa8\xac\x27\xb4\xac\x77\x7a\xa8\xff\x2d\xc5\x39\xe7\xb7\x23\x83\x0b\xb5\xfe\xcf\x7b\xad\x1f\x91\x6a\xd7\x8f\x48\x6f\x6b\x9e\x27\xa3\x3a\xba\xd5\x7f\x48\xfb\xff\xb1\xa8\xac\x87\xfd\xf8\xa6\xaf\xea\xd6\x0f\xc0\xa7\x54\x2e\x3c\x12\xfe\x4e\x06\x87\xb4\x8e\x23\x05\xf5\xbf\xa4\xbc\xb9\x2d\xaa\x5f\xe6\x22\xe7\x05\x87\xb8\x3f\x4b\xda\xbe\x48\xf1\xbd\x1c\xfa\x3c\xb5\x8e\xdf\x69\xfb\xdf\x28\xa8\x3f\x9b\x8b\x1e\x2d\x68\xcf\x56\xe5\x81\x3f\x03\x70\xa9\x7d\x21\x63\x53\xe5\x83\xd4\xbf\x23\x7e\x4e\x06\x8f\x68\x1b\xd7\x16\xd4\x3f\x9d\x0c\x5e\x75\x73\xfc\xc8\xa6\xcf\x7c\x02\x19\x0e\x22\xfb\x0b\xda\xbd\x18\x80\xbf\xd1\x77\xbe\x94\x3c\x51\xf9\xb3\xd8\x80\xcc\x2f\xaf\x93\xc5\x42\x19\xc2\x16\xde\xd6\xfe\xe9\x18\x9f\x00\x0c\x1e\x07\x2f\xef\x55\x16\x1d\x10\xbe\x14\xde\xf0\x6d\x76\xbf\xcb\xfc\xb3\xc3\x4e\x60\x0b\x4e\xbe\x90\xc5\x03\x65\xf4\x13\x9d\x2d\x38\x8a\x0c\x2e\xd2\x13\x22\x4f\xb4\x2f\xce\x07\x7a\x20\x4b\x22\xa3\x9e\x8f\xdb\x9d\x78\xba\xff\x56\x6d\x18\xa1\x6d\x87\x5e\xcb\xe1\x69\x94\x0f\x2d\x7e\x5b\x46\x27\xf5\x07\x3d\x84\x48\x6b\xd5\xbf\xf5\x70\xcc\x6b\x41\xbb\x45\xaf\x9c\x51\xde\x7a\xbd\x5b\xdd\x5a\xff\x14\x36\x70\x52\xdf\x3f\x41\xa6\x18\x87\x3a\x20\x75\x93\xc1\x4f\x94\xe7\xc4\x06\xe8\xd0\xcd\x25\x38\xdc\xef\xfc\x9b\xde\x7e\xfb\x96\x8d\x9b\xbf\xf6\x04\x3a\x5f\x3d\xa3\xfc\x24\x73\xec\x0e\x9d\x5c\x81\xfb\xfd\x22\xa7\xb4\x2f\x84\x27\x76\x93\xe9\x3a\xd7\xcd\xf2\x89\xed\xf8\x7a\x60\xab\x7f\xd9\x6b\xdd\xad\xb2\x0c\x4c\x91\x39\xb8\xf2\x63\xaa\xfe\xb7\xa3\x64\xf0\x79\x91\x93\x3a\xb7\x5d\xec\x7d\x94\xb0\x8d\x0c\x7e\xec\x7c\x38\x99\x9f\xd9\xc0\xab\x75\x69\xde\x0d\x9c\x2d\x6b\xf0\x6d\x32\x38\x56\x63\xfe\x71\x95\x0d\xec\x23\x8b\x3d\xdb\xcc\x55\xe0\xd6\xe5\x0c\x3e\x46\x16\x65\x2e\xf0\x3e\x1b\x38\xee\x92\xd3\x1d\xf0\x0a\x19\x5c\x7d\x2b\xd6\x44\xfe\x95\x21\xcd\xa0\x31\x90\xa6\x27\xee\x4e\xd3\xa9\x23\xe9\xc4\x40\x73\xb8\x39\x3c\x31\xd8\x48\xd3\x81\xbf\xa7\xe9\x1f\xae\x35\x06\xbe\xfe\xcb\xc8\xd4\x2f\x2e\x7d\xf1\x97\x4b\x97\xbe\xbe\x76\xe9\xeb\x3f\xfe\xf3\x5a\x51\x92\x67\xf2\x8e\xbc\x2b\x79\x24\xaf\x94\x21\x65\x4d\x0c\x34\x86\xa5\x6c\x57\x87\xd4\xa5\xb0\x40\xd7\x8a\x36\x55\xfb\x29\xca\xfc\x40\x49\x89\xbf\xed\x76\xbb\x9f\xb4\x1f\xeb\x36\x49\x49\x49\xfb\x7e\x29\xd0\x17\xfe\xd1\xf5\xa6\x85\xea\x5f\x7d\x89\x2d\xec\x77\xf2\xc7\xba\xf9\xc3\x3b\xce\xce\xb0\xf0\x14\x5b\x78\x28\xf0\x99\xff\xac\xfc\x43\xd6\xe1\x3c\xc4\x16\x04\xbf\xcb\xba\x8e\xe0\x53\x76\x1f\x5e\xf5\xde\xf9\xbd\x2d\xbc\xcb\x06\x56\x86\xeb\x53\x7d\xe0\x9f\x5a\xa0\x6b\xa9\xeb\xc5\x06\xa8\xd4\x3b\xe1\x1a\x6b\xc1\xbd\xae\x3f\x6c\x54\xbf\xf9\x64\xa0\x27\xfe\x21\x83\x0f\x93\xc5\x53\x91\x6f\x5b\x68\x2a\xb8\x7c\xc5\x06\x2c\x1b\x78\x56\x75\xf7\xa3\x2e\xf9\x38\x88\x67\xc8\xe0\x5e\x32\x78\x5a\xfd\x15\x29\xe7\xda\xe2\xfc\x51\x8b\xcb\xea\xed\x72\x5f\x8b\x7f\xdc\x5a\x8d\x81\x2d\xde\x0e\x56\x5e\xb0\x8e\x57\xce\xb1\x05\xb1\x3b\x1e\xa8\xdb\xe7\x62\x0b\x91\xc5\xad\x7e\xfd\x08\x03\x1e\x73\x3e\x9e\xed\x3d\xf2\x54\x51\x5f\xe4\x40\xfa\x56\xc6\x60\xc8\x13\x8e\xdf\x0d\x3c\x4b\x16\x0b\xfd\x53\x75\x40\xc6\x31\x1b\xd8\xc4\x16\x2e\x86\x7c\xc5\x06\xde\x13\x1b\xad\x66\x31\x5d\xf9\x47\x70\x67\x0b\x1f\x78\xfe\x68\x95\x7f\x58\xe6\x4d\x05\x6d\x9e\xd4\x3d\x5b\x98\x49\x16\xdf\x0b\xf0\x17\xfa\x7c\xcc\xd6\xb5\x61\xd2\xfc\xc3\x16\x84\x6f\xf6\x73\x36\xee\xbc\x8f\x65\x87\xc6\x10\xf4\x35\x69\x5d\x5b\x9c\x7f\xb9\x2d\xb7\xde\xd3\xb5\xfb\x49\xc9\x1f\x36\x2e\x16\x2d\xa4\xc9\xb3\xdd\xde\xef\x07\xa8\xfe\x68\x06\xf5\x6e\xaf\xc8\x52\x48\x7f\x36\xb0\xd0\xfb\xf4\x94\x6f\x0c\xbe\x50\x90\xa7\xf4\x5e\xd7\xca\xef\x95\x94\xc5\xa3\xd5\xcd\x4b\x06\xb7\x04\xf8\xcb\x7c\xa3\x9b\x5c\xea\xc0\xdf\xe9\x52\x8b\x9f\x53\xbb\x1f\x8f\xd4\x91\x09\x00\x3c\x17\x80\x5f\x50\x1f\xec\x55\xf5\xb7\x48\xba\xea\x7d\x3f\xb4\x13\x80\xe7\x55\x95\xa3\xeb\xd2\xef\x05\xfa\xee\x74\x17\x3e\xea\xe8\x0b\x36\xb0\x96\xda\x3c\xcf\x32\x67\xec\xd6\x81\x88\x34\x13\x91\xac\xae\x67\xc7\xfe\x83\x14\x20\xf7\xff\x0d\x44\xda\x07\xc0\xd0\xad\x4c\x36\x6e\x4c\x87\x72\x69\x63\xc9\xab\x39\xfa\x8f\xbe\xe9\xd6\xc5\xbf\xe2\x4c\x27\x19\x78\xae\x5b\x5f\x23\xd2\x42\x44\xfa\x21\xf3\xb3\xb4\x71\xe6\xeb\x00\xfc\x9d\x24\x8d\x89\xc8\x7e\xcf\xae\x23\x00\xbc\xa8\xa8\xcc\x40\x2e\x6d\x6a\xaf\x03\xe3\x77\x41\x1c\x4e\x8c\x77\x0b\x7f\x36\xb0\x34\x18\xff\xe7\xc9\xe0\x94\xb2\x7e\x56\xdc\x59\xfd\x46\x82\x57\x13\xd1\xc5\x01\x3e\xaa\x71\x1e\x19\x5f\xdd\xa3\xf1\x36\xfb\x3d\xfd\x5b\xeb\x0b\x63\x88\xb4\xa8\x54\x26\x79\xbd\xd3\xd2\x71\x64\x70\x45\x95\xfc\x61\x0b\x6f\x05\x3a\xaa\xc3\x57\x1e\xd0\xfd\x3e\x44\x3a\x1b\xd0\x75\xa4\x8e\x1f\x52\x68\x9e\xe5\x13\xbe\x92\x7c\x88\x54\xca\x4b\x64\x70\x5b\x30\x96\x8b\x7c\x64\x2d\xfa\xeb\xb8\x1d\x69\xd9\x06\x16\x1e\x2c\x78\x2f\x51\xda\xef\xf1\x7c\xcd\x19\xee\x73\xea\xea\x2c\x00\x9e\x2d\x6d\x08\x78\x69\x5f\x17\x59\x24\xb6\x46\x53\x79\x68\x34\x88\xd5\xe8\xb8\x92\xc1\x07\x03\xdb\xe6\xbb\x2b\x7b\x67\x96\xc9\x99\xd9\x1a\x6b\x94\xf1\xcc\xa3\xbd\xea\x2b\xe9\x07\x00\xbe\xa1\xed\x97\x31\x5d\x2a\x97\xbc\xfc\x69\xc9\xa2\x38\x66\xa3\xdd\x57\xd6\xad\x41\x67\x7d\x55\xea\x97\x07\xe0\x6d\x81\x3c\x79\xbf\xec\xbd\x2a\xd0\xf1\x90\xf5\xc1\xce\xb2\xf7\x9c\xdd\xda\xb6\xb7\x9f\x8a\x1e\x87\x3a\x6b\x47\xa0\x6b\xb7\x76\x91\x39\xc7\x03\xfc\x57\x14\xbd\x53\x53\xc7\x2d\x0d\xf0\x3f\x59\xf6\xbe\x8f\xdb\x6e\xd1\xff\xa5\x18\xef\xe0\xbd\xbd\xc1\x1c\x6a\x5d\x97\xbe\xbf\xac\xbc\x73\x23\x88\xb5\xeb\x39\xe9\x1a\xd8\xf5\x2c\xd6\x70\xd6\xac\xd1\x62\x39\x64\x61\x75\x60\x63\xef\x2f\xe3\x1f\x99\x07\x06\xb2\x67\x55\x51\x5f\xaa\x5d\x90\xad\x69\x9e\x2f\x7a\xa7\x17\x00\xe0\xef\x33\xbd\x50\x14\x97\x96\x78\x5d\xb6\xac\xc5\x3f\x06\x62\x7e\x0d\xe9\xef\xd7\x69\xdb\xf8\x77\xf4\xbb\xc6\xa3\x35\x55\xf6\x9d\xef\x95\x67\x0a\x64\x51\x11\xfe\xb9\x77\xc8\xe2\x32\x6a\xf3\xc5\xfb\x31\xde\xc1\x7b\x7b\xa8\x3d\x1f\x5a\xdf\x45\x6f\x5d\x54\x5d\x2b\x72\x63\xfa\xcd\xf0\x0f\x22\x5d\xd7\xb2\xc6\xca\x62\x27\xc9\xe0\xea\x40\x2e\x76\xe3\x9f\xed\x2d\x3b\xdf\xe6\xd7\xcb\x42\x00\xe0\xa3\x9e\xfe\x6e\xec\x15\xf2\x59\x1d\x00\xe0\x65\x81\x1e\xeb\x58\x3b\x6c\xe1\x65\x60\x33\x65\x7e\x0d\xd3\x8e\x89\x8c\xe9\xcf\xd6\xdb\x6d\xba\x16\x7c\xa0\x8b\xfc\xd9\x12\xe0\x7f\xb8\xe8\x9d\x3a\xf7\x88\x74\x30\x90\x63\x3b\xca\xde\xcf\x6c\x02\xc5\x7f\x43\x8c\x77\xf0\xde\x5c\xaf\x77\x1d\xfe\xdf\x97\xcd\xb3\x00\x78\x56\x26\x37\x94\x77\x8b\xec\x92\xae\x49\x63\x3b\x9a\x41\x1c\xe6\x9c\xb2\x77\xdd\x7a\x8b\xda\x04\x64\x70\x41\x29\xff\xf8\x78\xe5\x1f\x54\x4f\xa4\x45\xb1\x1e\x01\xed\x5e\x0d\xec\xe2\x8b\x00\x5c\x7b\x5d\x41\xe7\x09\xe7\x83\x3e\xdc\x5b\xf6\xae\xdb\xc3\x62\x5a\xb6\xfc\xc5\x20\xfe\x3d\xee\xab\xac\xad\x7b\x5a\xf6\x9e\x6d\xe9\x8a\xa4\x40\x6e\x4c\xf7\x6b\xa6\x9c\xf1\xef\x45\xed\x87\xc2\xf7\x83\x76\x2f\x13\xdc\x03\x99\x73\x56\x63\x2f\x0a\xdf\x77\x63\xb2\xed\x23\xda\x5f\x82\x77\x1b\x7f\xa3\xb1\xdb\x3e\xcf\x45\xb6\x50\x2a\x5f\x84\xe6\x82\x77\x3e\xde\x86\x0e\x03\xf0\x63\x2a\x0b\xb3\xf7\xa6\x69\xec\xfa\xa1\xf6\x3c\xc1\xbd\x3f\x0a\xc0\x0b\xcb\xca\x27\x8b\x53\xd8\xc2\x48\x80\x4f\x51\x6c\x74\x0e\x9c\x6f\xd0\xc2\x29\xaf\xab\xdd\x78\x29\x95\x43\x4a\xcf\xf9\x7e\xfd\xbc\x3d\xd7\xd2\xfe\x68\x02\xf0\x05\x8d\x31\xb9\x11\xc8\x99\x6c\xcc\x7c\x0f\xc0\x0b\xba\x95\xcd\x16\x36\x73\xdb\xef\xf1\x4d\x34\x7f\x29\xea\x07\x77\x4f\xd6\xcb\x5b\x1d\x07\x63\x81\x6f\xad\xa3\x7f\x75\x2c\x0a\x2f\xbd\xe2\xe7\x5c\x19\x4f\x73\xda\x6e\x53\x6e\x5e\x36\x8e\x48\xbb\xbb\xf1\x8c\xf2\xc1\x2c\xb6\x30\x1a\xf8\x18\xd7\x95\xbc\x5f\x80\xff\x2c\x19\xc7\xc7\xa9\xdd\x6f\xc7\xea\xf8\x7c\x10\x69\x96\x97\xad\x7c\x54\xf7\x4b\xdc\x50\x5b\x43\xc6\xc6\x31\x5d\x63\x9f\x5d\x55\x8e\xf3\x05\x19\x3c\x12\xc8\x9c\x93\x5d\xfc\x07\x65\x7d\x37\x9f\x0d\x5c\x27\xe5\x23\xb2\xf8\x4a\xb7\xbe\x2e\x02\x8d\x11\x29\xad\xa3\x4b\xdd\x2f\x64\xf5\x6a\xdc\x57\xb7\x75\xee\x0e\xfa\xb7\xfa\xc1\xe0\xa6\x56\x1f\xf8\xb2\xb6\x45\x79\xfa\x7e\x4f\x06\x37\x47\xeb\xbe\xcf\x55\xe4\x2d\xc3\xdf\xcd\x27\xd9\xc0\xde\xc0\xf6\x93\xf2\x5e\xb9\x25\xfe\x43\x2f\x37\x7e\x1f\xed\xc9\xda\xdf\xa3\xff\xb0\x4c\x1e\x1d\xc8\xf4\xb2\xf2\xe4\x31\x36\x50\x19\x33\x50\x17\xd8\xc0\xfd\x64\xf0\xc3\xc8\x97\x7e\x88\x2c\xd6\x59\xd3\x28\xe5\x9f\xec\xaa\xfb\x06\xf6\xf8\xb1\xd4\x5a\xb3\x10\xb9\xb4\x2d\x8a\x1d\xed\x89\x67\xd8\xc2\x34\xb6\xb0\x85\x2d\x70\xb4\x96\xb1\x2f\xc0\xbd\xaa\x9c\x52\xfe\x09\xd3\x5f\xdf\x74\x6b\x46\x9b\xdc\x98\xce\xfb\xa3\x2f\xcb\x9c\xce\xc5\xe2\x74\xdf\x77\x17\xca\x96\xf9\x1a\x4b\x7c\x21\x5a\x4b\x1a\x27\xeb\xf8\xbf\x17\xde\xeb\x09\xd8\xc0\x7c\xb2\x78\xbc\xcd\x4b\xed\xa4\x7b\x33\xde\xd5\xf5\x98\xf5\x6e\xdd\xc8\xa0\xa4\xf5\xae\xaf\xfc\x3a\xdf\xf7\x2d\x5e\x0c\xd6\xf5\xc8\xe0\x09\x36\xd0\x55\x9f\x95\x40\x25\xff\xc4\xf7\xa3\x7e\xaf\x87\xe0\x75\xb2\xbd\x36\x00\x69\xe1\x7d\xb4\xce\x15\xdf\xb3\x85\xd3\x64\xf1\xf1\x68\x0f\x4e\xaf\xf7\x93\x02\x7a\xd3\xad\x9f\x2e\x66\x03\x7b\xbc\xdd\xda\xc6\x9f\x6c\x96\x30\xf8\x1f\xb3\xb9\xd1\x39\x32\x68\xc9\xe2\x12\xe5\xb9\x9b\x81\xbe\xc8\x3f\x5d\xbf\x9e\xeb\xe6\x40\x3e\x8e\x68\xb7\x93\x7f\xc6\xad\x63\xef\x61\x03\xdb\x9d\x5f\xdb\xe0\xbc\x5b\x20\x7f\x93\x5e\xf8\xe7\x36\xbc\xff\x25\x43\xbf\xfb\xf2\x27\x4d\x3e\x5a\x28\x8b\x57\x0a\xaf\x8d\x01\x7f\xdd\xf5\x2b\x77\x9d\x48\x92\x61\xb9\x36\xa6\x8e\x0c\xc8\x75\x6c\x78\x62\x86\x5c\x3f\x4b\xd3\x97\xe5\xfa\x72\x9a\x7e\x26\xd7\x19\x69\x3a\x26\xd7\x81\x34\x6d\xa4\x49\x32\x31\x98\xa6\xcd\xe1\x24\x69\x0e\x36\x06\x9a\x83\x49\xd2\x1c\x3e\x71\xf7\xc4\x60\x92\x34\xa4\xdc\x01\xb9\x4e\x1d\x91\xeb\xdf\x27\x06\x1a\xc3\x7f\x48\x92\xbf\x37\x07\x9b\x83\xee\x3a\x3c\x11\x5e\xaf\x35\xd2\x74\xe0\x8b\x24\xf9\x4b\xc5\x35\x7b\x2f\xce\x9f\x95\x3b\xa6\xf5\x64\xf5\x66\x78\x64\x78\x65\x78\x4e\x0c\x78\xbc\xb3\x76\xa4\x53\xb5\x5d\x59\x3b\xb3\x76\x8f\x0d\x7a\x3a\x64\x74\xc9\xe8\x94\xd1\x2d\x6d\x0e\x16\xd3\xd7\x5f\x17\xe8\x5e\xb2\x5d\x77\xf6\x93\xdd\x81\x3b\x70\x07\x7e\x66\x50\x9f\xd1\xc3\x64\x70\x1d\x5b\xd8\xca\x16\x5e\x62\x0b\x6f\xa8\x3d\xf3\x92\xfe\x26\xcf\x16\xe9\x9e\xdf\x5f\x34\xe8\xdc\xec\x11\xb7\x4f\xc5\xfb\x39\x1a\xea\xbf\x4e\xb9\x4b\xd2\x78\xb3\x1b\x6e\x0f\x9e\xc1\x57\xd9\xc2\xd2\x02\xdf\xe6\x6d\x0b\x6c\x01\xc8\xe0\x76\xb6\x70\x96\xd5\xb6\x6e\xc5\x47\xb5\xe6\x07\xc1\xdc\xa8\xc6\x73\x32\xce\x2e\xff\x7d\x55\xbc\xc6\xcf\x09\x64\x70\x96\xe3\x67\x03\xd7\xc3\xf6\xc4\xf7\x45\xbf\xd5\x7f\xee\xf6\xf3\xee\x25\x3b\xb9\xfd\x09\xb7\x02\x74\x7e\xb2\xd9\xf9\x0a\xca\xfa\xd3\xe3\x7e\x85\x8d\xf3\xaf\xc8\x9c\xe5\x77\x6c\xe1\x49\xb6\xb0\xc6\x25\x1f\x33\xfa\x3b\xdd\xa7\x7d\xd4\xc5\x03\x74\xe1\x0f\x32\xce\xc7\xb1\x35\x3c\xe3\xe2\xe7\x00\x77\x36\x94\x81\x4f\xdb\x3e\x6d\x9d\x47\xea\xbd\xee\x23\x7e\x85\x0c\x3e\xd2\x0b\xae\x1a\xd3\xb9\x88\x2d\xec\xd4\xf3\x26\x8a\xcb\x37\xce\x9f\xde\xf7\x7d\x1b\x75\x80\xad\x8b\x31\x1e\x6d\xfb\xb6\xb2\x71\xeb\xe6\xfe\x27\xf4\xfc\x86\x9b\x9f\xcb\xfb\x98\xaf\x95\x7e\xef\x48\xce\xa7\x92\xd1\x43\x78\xe1\xf1\xfe\xb4\xaa\x1e\xb0\x81\xa7\xc9\xe2\x8d\x4e\xfe\x84\xef\x35\x3e\xb8\xef\xf2\x9a\xf7\x3a\x7d\xb2\x82\x2d\x7c\xdb\x29\x2f\xa1\xc9\x06\xb6\x5c\x31\xbf\xbe\xe5\x7a\x82\xad\x1b\xbb\xb1\x7f\x4b\xea\x7f\x9d\x2d\xdc\x72\xbd\xcd\x16\xa6\x90\xc5\x9d\x19\xfd\x39\xef\x73\xda\x71\x2b\x69\xa0\x31\xc5\xb1\xbe\x16\xb9\xf6\xd8\xad\xaa\xb3\x14\x17\x0b\x43\x64\xf0\x72\xde\x7e\x70\x34\xd8\x72\x2b\xea\x23\x8b\x2b\x84\xe6\x79\xfd\xec\xce\xb7\xb9\xe9\x73\x2b\x6e\x02\xa7\x07\xc9\xe2\x0f\x91\x9e\x69\x8a\x4e\xe9\x67\x3d\x6c\xdc\x39\x6e\xa3\x79\x1d\x0d\xe7\xd9\xe4\xe2\xe8\x7e\x16\xd0\x33\xe6\x7e\x88\xc6\xe3\x58\xbf\xf4\x82\xae\xfd\x1f\x8f\xf4\xef\x15\x3d\xa3\xe8\xb6\x00\x77\x5e\x84\xf6\x4f\x10\xa7\x73\xaa\x1f\xf6\x01\x19\x7c\x3a\xd4\xef\x1a\xeb\x31\x29\xfe\x02\xe0\x99\xba\x07\xf8\x55\x00\xfe\x00\x80\x8f\x4b\x42\x74\x67\x8b\xbe\x8e\x48\xeb\x10\xa9\xf2\xcc\x94\x22\x60\x03\x43\xba\x4f\x23\xb4\x15\xb6\x4e\xa6\xac\x0c\xc8\xe0\xcc\xf6\xfe\xa3\x96\x7e\xef\x7a\x26\x48\x11\x20\xd2\x52\x69\x6f\xfb\x4c\xb0\x6c\xdd\x9b\x3b\x92\xc6\x5c\x7e\x08\xc0\xcb\x7f\xf3\x9b\xd1\x9e\x64\x39\x1b\xd8\x95\xb7\x0f\x60\x8c\x2c\x4e\x7a\xce\x90\xed\xed\x0e\xf8\xfe\x07\x8d\xbb\xa8\x05\x88\xf4\x80\x9e\x25\x5b\xd0\x5e\x2a\xb9\x86\xcf\xe9\x63\x8d\x8b\xaf\x8b\xef\x94\xec\x2c\xc9\xf6\xfa\x32\x96\xc6\xd0\x74\x2d\xcb\xc2\x7d\x6c\xe0\x4a\x6e\x4e\xe6\xcf\xca\xab\xdb\xf6\x95\xfe\x4c\x8f\xb2\xb6\xd5\xfd\x9f\xae\x00\x70\xed\xf1\xc6\xc6\xd9\x48\xa1\x2c\x1c\x27\xd3\x3b\x0f\x90\xc1\x2d\x39\x3d\x6f\xf1\xcb\xba\xf6\xac\x8c\x63\x1f\x7b\x15\xf3\xb7\xf0\x3f\x1d\x01\xe0\x67\x00\xf8\x11\x8d\x77\x9a\x83\x48\x8b\x11\xe9\x69\xe1\x15\x1f\x07\xd2\x91\xaf\x09\xc0\x9b\x6a\xe1\xfd\xa6\xb3\x97\x8f\xe7\xec\x82\x2e\xf1\xea\x45\x30\xfa\xff\x7f\x23\x65\x7c\x13\xf1\xd1\x13\x35\xdb\xbe\x22\xdf\xf6\x56\x9c\xcb\x3b\x1a\x8b\x56\x95\x7f\xb6\x3b\x11\xca\xc5\x97\xe4\xc6\x47\x13\x91\x6a\xf1\x41\xfb\x8c\xc2\xf6\xb8\xed\xc5\x87\xc2\xc6\x9d\x91\x15\xea\xfa\x0b\x75\xf6\x8d\x09\xee\x88\x74\x39\xc4\x1b\x80\xc7\x00\xb8\x67\xfb\x10\x80\x87\xe2\xf1\x03\xc0\x57\x34\x1e\xbd\x2b\xe8\x9c\xfc\x6c\xce\x5e\x31\xad\x73\x3a\x2b\x21\x8b\x4d\x0b\xe6\x35\xb5\x64\xbe\x9e\xb5\x1d\xf6\xbb\xb4\xbd\xf2\x0c\xa0\x32\x00\xe0\x85\x05\x34\xf8\x68\xe6\xcc\x2b\x95\x7d\xe9\xcf\x61\xc8\xd9\x03\xb5\xe3\x84\xfc\xf9\xb4\xd9\x5c\xdb\xa5\xd2\x33\xc9\x03\x5c\x17\xc5\xfb\x82\x7a\x91\x5b\x5d\xca\x1d\xf2\x31\x6f\xad\xf6\x4b\x2a\x3c\x43\x3d\xd7\x06\x8b\x8b\xa9\xe5\x6f\x74\x31\x15\xa7\xea\xd4\xa7\x7b\x8f\xc7\xa8\x2d\x3b\xc6\xeb\xcc\xeb\x00\xf8\xdd\x48\x66\x15\x9e\x9b\x35\x19\xf0\x67\x76\xe5\xca\xee\x38\x0f\x28\x06\x8d\x07\xe1\x40\x0f\x34\xea\xf8\x95\xdd\x99\xdf\x91\x1d\x59\x95\x07\x80\xa7\xb7\xcf\x13\x6e\xc9\xaa\xbe\xcd\x0d\x54\x26\x8e\x07\x36\x52\xa3\xdb\xde\xa0\x56\x5b\xfc\x79\x9f\xe1\x38\xee\x38\x87\x2c\x06\x32\xb8\x32\xef\x8f\x84\xfd\x35\xf0\x5b\x19\xf5\xcf\xf1\x5e\xda\x57\x07\xbc\xfd\x98\xd3\x29\x95\xfa\x88\x2c\xee\x0e\xed\x97\xa2\x73\xcc\x62\xf0\x7b\xdb\x72\x73\xea\x4a\xdd\x89\x48\x3b\x22\xdc\xba\xc6\xb6\x4e\x06\x00\xf8\xe9\x48\x0e\x76\x9c\x79\x17\x83\xf3\xd5\xe4\xed\x80\x4a\xdf\x00\x1b\xd8\x16\xfa\xd9\xea\xec\xad\x05\xe0\x77\xa2\x7d\x86\x2b\x7a\x69\x5b\x1d\x10\x7b\x29\xb2\x07\x3e\xa8\xca\x43\x06\x9f\x8c\xf8\x3f\xde\x63\xd0\x01\xee\x8c\xf6\xbc\x3f\xa1\x6c\x7f\x66\x88\xdb\x07\xd1\x1c\xa6\xef\x73\x63\xb1\x15\xa3\x3a\x8e\x55\xe5\x71\x67\xd6\xe7\x65\x59\xc7\x39\x66\x31\x4c\xbe\xfd\x39\xbd\x5f\x29\x67\x7a\x05\x99\x07\x45\xfd\x5f\xd9\x7e\xb6\xf8\x78\xe4\x27\xad\x3c\x4f\x8b\x2c\x6e\x0b\x7d\xed\x6c\x60\x73\x55\x1e\x44\xda\x9f\xe9\x67\xe5\xff\x49\xef\x9d\xe9\x52\xc7\xd2\x36\x7d\x5d\x1d\x87\xaa\xf2\xb0\x85\x0d\x6d\xfd\x5f\xb8\xc7\xa6\x28\xcf\x53\xa1\x7f\x9d\x0d\x94\xee\x1f\x0c\x70\xdb\x1e\xf1\x66\xd5\xde\xf8\x9e\x01\x80\x37\x47\x75\x54\xda\x73\x6e\x0e\x17\xae\x4f\xd4\x91\x7f\xce\xc7\x9e\xf3\xaf\x97\x9e\x3f\x17\xe0\x36\x14\xcd\x59\x4f\xf4\xd2\xb6\x3a\x20\x76\x6f\xa4\x63\x2b\xd7\x3c\xb2\x18\xed\x40\xfe\x55\xce\xdf\xd9\xc2\x5c\xca\xfb\x12\x2b\xcf\xd1\xd4\x73\x5e\xc7\xa2\xfd\x26\x7d\xf3\x0b\x23\xd2\xdc\x6c\x4f\xae\xb6\x7d\xbc\xdb\xb9\x8a\x19\x90\xc1\x4f\x22\xff\x45\xa5\x5c\x76\xb1\xed\x2e\xee\xb9\x35\xef\x17\xbb\xb1\xd2\xe7\xe3\xf7\xdc\xe6\xf4\xf3\xe1\x24\x49\xfb\xb2\x16\x81\x48\x07\x22\xbf\x50\xf5\xd8\xf7\xe7\x93\x8c\x05\xed\x18\xaf\x7b\xf6\x89\x3f\x63\x24\x27\x37\x2b\xe5\x19\x00\x2f\x50\xbb\x37\x9c\xa7\x74\x7c\x87\xa8\x57\x90\x39\x54\xde\x7f\xd6\x79\x4e\x6b\x11\x90\xc1\xa5\x91\xff\xa2\x74\x1f\x62\x41\xde\xad\x91\x0d\xfc\x56\x9d\x7c\x6d\x1e\x68\xf5\xd3\x78\x9d\xb9\x5a\x19\x78\x9b\x47\xc6\x55\x4e\xb6\x54\xf6\xbd\xb6\xe1\xd5\xc8\x07\x52\x29\xc7\x33\x60\xeb\x62\xd9\xc3\xbc\xa3\x75\xce\x25\x04\x60\xf0\xdf\x2a\xc9\x8d\x03\xa1\xc1\x86\x79\xf3\xfe\xbb\xa7\xb1\x00\xc0\x6b\xdb\xe7\x53\xb4\xfa\xfd\x72\xd1\x59\xcd\x31\x90\xc5\x7b\xd8\xf8\xfd\x69\x41\x6c\x7a\x4f\x7e\x08\x36\x70\x3a\x9c\x3f\x8b\x2e\xad\x89\xf7\x92\x60\xef\x6e\x1a\xec\x07\x3c\x52\x47\x26\x02\xf0\x7c\x44\x7a\x3f\x7f\xce\x88\xf7\x1d\x8a\x9e\xa9\x85\xbb\x8b\xa9\xc8\xf9\x2f\xbe\x2b\xf8\x16\x46\x55\x19\xcf\x46\xf3\x80\x6f\xea\xfa\x3f\x01\x78\x55\x9b\x06\xf9\x73\xbf\x01\xf8\x04\x00\xef\xd0\xbd\x88\x8b\xc4\x56\xd4\x6f\xf3\x3c\x8f\x48\x9f\x64\x7b\x57\xa3\xfd\x88\x8d\xf0\xdb\x33\xdd\xe0\xaf\xe6\xd7\x22\xbf\x4f\xb6\xfd\x17\x0e\xf7\xe7\x7b\x69\x7b\xa2\xdf\xe2\x61\x0b\x51\x1c\x4a\x3d\x1e\x50\x1a\x2c\xd1\x33\x3c\x2a\x7c\xdc\xdd\x9f\xeb\xfe\xd3\xda\x32\x84\x2c\xae\x89\xe4\xde\x55\x32\x58\xe9\x2b\x28\xa1\xc1\x8e\x7c\x4c\x16\x9c\x2f\x3b\xe3\xb6\x08\x10\x09\x00\x78\x5f\xdb\x97\x5b\xdf\xff\xaf\x3c\x7f\x10\x80\x6b\xfb\xee\xd9\xba\xb3\xeb\xcf\x46\xb1\x53\x95\xf3\xe4\xd2\xf6\x5b\xbc\xd7\x7d\x27\x26\xbf\x0e\x50\xe9\x0f\x89\x41\x75\xe3\x3e\xf5\xdf\x16\xae\x7b\x05\xbc\x7e\xd5\xeb\xfb\xce\x33\xe3\x2b\xf1\x35\xb8\x3b\x1f\x5f\xe8\xbe\xb1\x35\xa9\xbe\x0f\xca\x5c\x4f\x9d\x71\x2e\x4f\x4e\xa6\x2c\xb1\x13\xf5\xfb\x43\x32\xd6\xf7\xe9\xbe\xe3\x43\xca\x23\xdb\x75\xed\x60\x52\xe7\xc1\x7a\xbe\x87\x5c\xfc\x20\x19\x7c\x66\x32\x65\x85\x30\x6a\xdd\xb9\x4b\x47\xa2\xf5\xf5\xeb\x64\xb1\xd2\x06\xf9\xa9\x40\xcf\xae\x1c\x8b\xe2\x13\x3e\xe9\x47\xfc\x55\xe2\x75\xe1\x2c\x32\x78\x3e\xf2\x0b\x8c\xde\x0e\x31\x00\x64\x71\x3e\x19\xbc\x90\xb3\x57\x2c\x5e\xd6\xef\x33\xf5\xb3\x9e\x25\x6e\x1f\x61\x7e\x7d\x5d\xc6\xd7\xcf\xc6\x07\x2e\x9e\xda\xe2\x85\x28\xfe\xf0\x46\xb7\x6f\xa8\xde\x54\x7d\x06\x9e\x70\xb1\x66\x61\xfc\x9d\xff\x4e\xc7\xa4\xe4\xc1\x4d\xe1\x62\xe1\xf1\x1c\xcf\xb7\xd7\x39\xe2\x73\x8c\xfa\x5d\xef\xc6\xd6\x39\x9f\x6d\x79\xe8\xce\x75\x62\xd3\xff\x6f\x09\xc5\x20\x3a\x89\x0c\x5a\x0e\xce\x28\x0d\xc6\x7c\xa5\xaf\xaa\x1f\xa0\xdf\xde\x1c\xcf\xcf\x11\xdd\x55\x78\x71\xe3\xad\x88\x57\xd7\x73\x24\xd7\xb1\xff\x06\x6b\x1c\x2b\x2d\x73\xf4\x4a\x3f\x65\x9f\xf1\x59\x12\xdb\x06\x81\xcf\xf0\x5b\xb2\xb8\xb1\x1f\xfb\x18\xd8\xba\xf3\xfd\xd7\xfb\x33\x68\x3b\xf7\x0f\xe8\x37\x3d\x27\x3d\xc7\xbc\x29\xdc\x8c\xfb\x46\xc4\x91\x0e\xfb\xa0\xad\x7f\x47\xf5\x1c\xfa\x55\xbd\x9c\xf3\xce\x06\xa6\xb1\x81\x15\x7a\xae\xee\xc5\xce\x78\xd7\x56\x9c\xf1\xd1\x8a\xef\xd9\xdd\x72\x18\x7d\xd3\x9d\xa9\xb1\xde\xc7\x42\x96\xc7\xef\xeb\xfa\xe3\x69\xb2\x6e\x1f\xf8\x4e\xfd\xfe\xd6\x53\x6c\xf0\x29\x36\xee\x3c\x12\xf9\xed\x80\x8b\x33\xd1\x6f\x11\x14\x95\xa5\x74\xbd\x4c\x3e\xdf\x6d\xb3\x2f\x44\xbf\x1d\xb1\x9d\x6c\x3e\x0e\xaf\xbf\x57\xb8\x42\x16\x77\x16\x7d\x0f\xe9\x76\x01\xf7\xfd\x2c\x03\xcf\xe8\xf7\x33\xd2\xbc\xff\x3d\x1f\xbf\x9f\x5f\x9f\x2f\x7f\x4e\x06\xcf\xb8\xef\xaf\x9b\xee\xdf\x5f\xbf\xdd\x80\x8d\xfb\xce\xf1\x16\xf7\x7d\x48\xf7\x4d\xce\xce\xf8\xfd\xbc\xfe\x6e\x3d\xbb\xa2\xdf\xcd\xd8\x46\x16\x7f\x7b\xee\xc0\xbc\xdb\x86\xcf\x27\x0b\x7a\xde\xc8\x1c\x3d\xd7\xfd\x29\xb7\x7f\xc5\xc0\x0e\x4d\x5b\xbd\x2c\x80\x15\xba\xa7\xe4\x17\xdf\xde\x3b\x70\x07\xee\xc0\xed\x0f\x69\x35\x34\x07\x73\x87\x0b\x34\x93\xc4\xfd\x30\x92\x24\x53\xe5\x7a\x62\xea\xc8\xdd\xee\xf1\xb0\xfb\x92\xed\xc4\xdd\x69\x7a\x62\x38\x4d\x9b\x33\xd2\x74\x6c\xd0\x1f\xf7\xd0\x1c\x48\xd3\xb1\xe1\x34\x9d\x98\x91\xa6\x23\xf2\xee\xd4\x34\xfd\x4c\xae\x2f\xbb\x3f\xf7\xcf\x6b\xf2\xe6\x8f\xf2\xe8\xc4\xdd\xe9\x48\xea\x0f\x3f\x18\x1b\x9e\x18\x98\x48\x92\xe1\xc6\xf0\xc4\x40\x73\xea\xc8\x60\x63\xb8\x39\xd8\x18\x68\x0c\x34\x07\x9b\x83\x63\xc3\x13\x33\xe4\x3a\x92\xa6\x53\x9b\x03\x8d\xe1\x1f\xd3\xf4\xb5\x89\x81\xc6\xf0\x67\x69\xfa\xb2\x5c\xff\x94\xa6\x7f\x0a\xae\xe9\x17\x69\xfa\x63\x3a\xd0\x48\x5f\x93\xeb\x8c\xf2\xab\xbe\x17\xe7\x6f\x95\xeb\xeb\xd1\x7a\x03\x3c\x3c\x5e\x19\x9e\x19\xde\xa9\xb6\x23\x6b\x57\xfa\x9a\xd0\xf3\xc7\x76\xbb\x33\x3a\x64\x74\xc9\xe8\x24\x74\x73\xb4\x53\x3a\x66\x74\x4d\x93\xe1\x89\x24\xa4\xfb\x58\x92\xcc\x08\xfb\xc5\x1d\x10\x51\x1b\xfe\x27\x00\x00\xff\xff\x17\x1b\x15\x41\xbe\x86\x00\x00")

func staticImagesFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_staticImagesFaviconIco,
		"static/images/favicon.ico",
	)
}

func staticImagesFaviconIco() (*asset, error) {
	bytes, err := staticImagesFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/images/favicon.ico", size: 34494, mode: os.FileMode(438), modTime: time.Unix(1515365050, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticImagesLogoSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x4e\xc7\x20\x0c\x87\xef\x3e\x45\x53\xcf\xfe\x29\x43\x4d\x9c\xeb\x0e\xbe\x89\x32\x64\x64\x08\x06\x70\x6c\x6f\x6f\xc8\xdc\xd1\x64\x97\xb6\x69\xda\xef\x4b\x7e\x43\x5e\x2d\x6c\x5f\x3e\x64\xc6\xb9\x94\xef\x5e\x88\x5a\xeb\xad\xaa\x5b\x4c\x56\x74\x44\x24\xf2\x6a\x11\x56\x67\xea\x5b\xdc\x18\x09\x08\x24\xd1\x51\x10\x72\xd9\xbd\x61\xfc\x78\xd7\x8b\x4d\xf1\x27\x4c\x3d\x84\x18\xcc\x2b\x8e\x77\x00\x00\x83\x76\x49\x7b\x03\x7a\x63\x7c\x6a\xf7\x7a\xff\x1b\x12\xe3\x63\xeb\x9f\xce\x7b\xc6\xf6\xd3\x60\x29\x2e\x86\xf1\x5e\xaa\x97\xce\xe8\x73\xf1\x50\xdd\x54\x66\xc6\x67\x3a\xa9\xe2\xc0\x5e\x70\x74\xff\x3a\x8c\x96\x4a\xaa\x0b\x8e\xa1\x25\x30\xfe\x06\x00\x00\xff\xff\x90\x78\x79\x8b\x29\x01\x00\x00")

func staticImagesLogoSvgBytes() ([]byte, error) {
	return bindataRead(
		_staticImagesLogoSvg,
		"static/images/logo.svg",
	)
}

func staticImagesLogoSvg() (*asset, error) {
	bytes, err := staticImagesLogoSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/images/logo.svg", size: 297, mode: os.FileMode(420), modTime: time.Unix(1515390044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticImagesSpinnerSvg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x93\x41\x4f\x83\x30\x14\x80\xef\xfe\x8a\x97\xe7\x79\xd0\xc2\x88\x73\xa3\x3b\xe8\x59\x2f\xfa\x07\xba\xf2\xc6\x9a\x95\x96\xb4\x05\xc6\xbf\x37\xb0\x19\x4f\x3a\x8d\x17\x3d\x10\xd2\x97\xf6\xcb\xd7\x7c\x69\x19\xfa\x1a\x4e\x8d\xb1\x41\xe0\x21\xc6\x76\x9d\xa6\xc3\x30\x24\x43\x9e\x38\x5f\xa7\x19\x63\x2c\x0d\x7d\x8d\xd0\x6b\x1a\x1e\xdc\x49\x20\x03\x06\x9c\xcd\x1f\x42\x88\xa3\x21\x81\x3b\xa9\x8e\xb5\x77\x9d\xad\xd6\x60\x9d\xa5\x0d\x6e\x6f\x00\x00\x4a\xa5\xbd\x32\x04\xea\x24\xb0\x60\x08\x6a\x3c\xff\xbd\x40\x7e\x97\xb0\x22\x47\xd8\x6b\x63\x04\x4e\x87\x26\x9a\x77\x47\x12\x78\x4b\x8a\xe7\x3c\x7f\x1f\x2c\x06\x5d\xc5\x83\xc0\xec\x42\x9d\xc9\xd2\xea\x46\x46\x02\x19\xa3\xd7\xbb\x2e\xd2\xb3\x6c\x48\xa0\x47\x50\xd2\xa8\x27\x57\x91\xc0\xd0\x1a\x3d\x71\x7b\x69\x3a\x0a\x02\xd9\x66\xc9\x10\x8e\x34\xbe\xea\xe6\xbc\xe6\x08\x55\xe7\x27\xf4\x34\x7e\x99\xf7\x87\xf9\x8e\x49\x06\x2c\x59\x01\x47\xd8\x51\xad\xad\xc0\x05\x0f\x08\x9e\x5a\x92\xf1\xd1\x75\x36\x0a\xd4\xb6\xa2\xbd\xb6\x3a\x12\x6e\xcb\xf4\x22\x74\x5d\xd1\xb5\x52\xe9\x38\x7e\x25\xca\x37\xdf\xf4\x9c\x2c\x7f\xe3\x59\xa6\xe7\x42\x57\x73\xe5\x45\x52\xac\x96\x9f\xe4\xe2\xf9\x7d\x46\xea\x6f\xe5\x62\xff\xa3\xd6\x4f\x34\x3f\x62\x95\xd3\x9b\xdc\xbe\x05\x00\x00\xff\xff\x4a\x3d\xbd\x02\xbb\x03\x00\x00")

func staticImagesSpinnerSvgBytes() ([]byte, error) {
	return bindataRead(
		_staticImagesSpinnerSvg,
		"static/images/spinner.svg",
	)
}

func staticImagesSpinnerSvg() (*asset, error) {
	bytes, err := staticImagesSpinnerSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/images/spinner.svg", size: 955, mode: os.FileMode(420), modTime: time.Unix(1515388994, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\x41\x8f\xd3\x30\x10\x85\xef\xfd\x15\xc6\x12\x37\x52\xb7\xb0\xed\x2e\xc5\x0e\x42\x65\x91\x38\x81\xd0\xae\x04\x47\xc7\x9e\x26\xb3\xeb\xd8\x26\x9e\xa6\xad\x10\xff\x1d\xa5\x69\x51\x02\xf1\xc5\xca\xf7\xfc\x3c\xf3\x34\x8e\x7c\xf1\xf1\xcb\xf6\xe1\xc7\xd7\x7b\x56\x51\xed\xf2\x99\xbc\x6e\xa0\x6d\x3e\x63\x8c\x31\x59\x03\x69\x66\x2a\xdd\x24\x20\xc5\x1f\x1f\x3e\x65\x77\x7c\x28\x55\x44\x31\x83\x9f\x7b\x6c\x15\xff\x9e\x3d\x7e\xc8\xb6\xa1\x8e\x9a\xb0\x70\xc0\x99\x09\x9e\xc0\x93\xe2\x9f\xef\x15\xd8\x12\x46\x4e\xaf\x6b\x50\xbc\x45\x38\xc4\xd0\xd0\xe0\x30\x7a\x24\xd4\x2e\x4b\x46\x3b\x50\xcb\x57\xac\xd6\x47\xac\xf7\xf5\x00\xa0\x1f\x83\x7d\x82\xe6\xfc\xa5\x0b\x07\xca\x87\x6b\x21\x42\x72\x90\x7f\xc3\xdd\x8e\x6d\x83\x4f\xc1\x81\x14\x3d\xeb\xf5\x44\x27\x07\x8c\x4e\x11\x14\x27\x38\x92\x30\x29\x5d\xbc\xdd\x9a\xa7\x88\xde\x43\x73\x68\x74\x64\xbf\xfe\xe2\x6e\xc5\x90\x90\x30\xf8\x0d\xd3\x45\x0a\x6e\x4f\xf0\x6e\xa4\x53\x88\x1b\xb6\x5a\xbc\x1c\x53\x07\x3b\x9a\xc0\xb5\x6e\x4a\xf4\xd9\xd9\x93\xad\x16\xf1\x38\x29\xf7\xe6\x09\xbd\x4f\x0f\x0e\x0c\x6d\x98\x0f\x7e\xd0\xca\xef\xe9\x2c\x58\x97\xff\xe4\xb1\x98\xa2\xd3\xa7\x0d\x2b\x5c\x30\xcf\xe3\xfb\x0f\x68\xa9\xda\xb0\xe5\xe2\xbf\xca\x15\x60\x59\xd1\xa4\x94\x1d\xa0\x78\x46\xca\xce\xcd\xd9\x46\x97\xd3\xad\x49\x71\x9e\x41\x3e\x93\xa2\x7f\x75\xb2\x08\xf6\x94\xcf\xa4\xc5\x96\xa1\x55\xbc\x09\x81\xae\xe3\xec\x98\x71\x3a\x25\xc5\x07\x69\x78\x2e\xbb\x3c\xa9\x31\x8a\x8b\x44\x9a\xd0\x08\xac\x75\x09\x49\x5c\x4e\xcd\x53\x5b\x72\x26\x72\x29\x2c\xb6\x5d\xa9\x7e\x4b\xa6\xc1\x48\xc3\xf1\x3f\xe9\x56\xf7\x94\x8f\xef\xb3\x98\x48\x98\xfe\x09\xcd\x9f\xd2\xfb\xb5\x2d\x6e\x6e\xf4\x5b\xb3\x5e\xdd\xad\x97\xc5\x9b\xf5\xeb\xdb\xdb\x15\xcf\xa5\xe8\xcd\x5d\x89\x4b\x0c\x71\xfe\xa5\xfe\x04\x00\x00\xff\xff\x92\x68\xf6\xb0\x69\x03\x00\x00")

func staticIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticIndexHtml,
		"static/index.html",
	)
}

func staticIndexHtml() (*asset, error) {
	bytes, err := staticIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/index.html", size: 873, mode: os.FileMode(420), modTime: time.Unix(1515134099, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/images/favicon.ico": staticImagesFaviconIco,
	"static/images/logo.svg":    staticImagesLogoSvg,
	"static/images/spinner.svg": staticImagesSpinnerSvg,
	"static/index.html":         staticIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"images": &bintree{nil, map[string]*bintree{
			"favicon.ico": &bintree{staticImagesFaviconIco, map[string]*bintree{}},
			"logo.svg":    &bintree{staticImagesLogoSvg, map[string]*bintree{}},
			"spinner.svg": &bintree{staticImagesSpinnerSvg, map[string]*bintree{}},
		}},
		"index.html": &bintree{staticIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
